{"version":3,"names":[],"mappings":"","sources":["script.js"],"sourcesContent":["window.apexUtils = window.apexUtils || {};\nwindow.apexUtils.universalTheme = {\n\tcollapseNavMenu: function(){\n\t\tapex.theme42.toggleWidgets.collapseWidget('nav');\n\t},\n\texpandNavMenu: function(){\n\t\tapex.theme42.toggleWidgets.expandWidget('nav');\n\t},\n\tcollapseNavMenuNodes: function(){\n\t\t$(apex.theme42.TREE_NAV).treeView('collapseAll');\n\t},\n\texpandNavMenuNodes: function(){\n\t\t$(apex.theme42.TREE_NAV).treeView('expandAll');\n\t},\n\tcollapseCollapsibleRegion: function(selector){\n\t\tvar $region = $(selector);\n\t\t// See widget.ToggleCore.js and widget.collapsible.js\n\t\t// This unfortunately remains the best option\n\t\t// todo. check that this is actually a collapsible region\n\t\t//if ($region.hasClass('is-expanded')) {\n\t\t//\t$region.find('button.t-Button--hideShow').first().click().blur();\n\t\t//}\n\t\tif($region.collapsible().length==0){\n\t\t\tapex.debug.error('Region is not collapsible');\n\t\t\treturn;\n\t\t}\n\t\t$region.collapsible('instance').core.collapse();\n\t\t$region.collapsible('instance').core.setUserPreference(false);\n\t},\n\texpandCollapsibleRegion: function(selector){\n\t\tvar $region = $(selector);\n\t\tif($region.collapsible().length==0){\n\t\t\tapex.debug.error('Region is not collapsible');\n\t\t\treturn;\n\t\t}\n\t\t$region.collapsible('instance').core.expand();\n\t\t$region.collapsible('instance').core.setUserPreference(true);\n\t},\n\tconfigureSuccessNotificationDuration: function(duration){\n\t\tapex.theme42.configureSuccessMessages({\n\t\t\tautoDismiss: true,\n\t\t\tduration: duration\n\t\t});\n\t},\n\tscrollTo: function(selector, duration){\n\t\t//apex.theme42.util.scrollTo(id);\n\t\t//changed the default scrollTo function to not only handle id-s,\n\t\t//but any jQuery selector or jQuery object\n        var elem$,\n            elemOffset;\n\n        if(typeof(duration) != \"number\"){\n        \tduration = 400;\n        }\n\n        elem$ = $( selector );\n        if ( elem$[0] ) {\n            elemOffset = elem$.offset().top - apex.theme.defaultStickyTop();\n            $( 'html, body', apex.gPageContext$ ).animate({\n                scrollTop: elemOffset\n            }, duration);\n        }\n\t},\n\texec: function(){\n\t\tvar daThis = this;\n\t\tvar performAction = daThis.action.attribute01;\n\t\tvar duration = daThis.action.attribute02;\n\n\t\tvar spinnerHTML = daThis.action.attribute03;\n\t\tvar spinnerCSS = daThis.action.attribute04;\n\n\t\tswitch(performAction){\n\t\t\tcase 'collapsenavmenu':\n\t\t\t\tapexUtils.universalTheme.collapseNavMenu();\n\t\t\t\tbreak;\n\t\t\tcase 'expandnavmenu':\n\t\t\t\tapexUtils.universalTheme.expandNavMenu();\n\t\t\t\tbreak;\n\t\t\tcase 'collapsenavmenunodes':\n\t\t\t\tapexUtils.universalTheme.collapseNavMenuNodes();\n\t\t\t\tbreak;\n\t\t\tcase 'expandnavmenunodes':\n\t\t\t\tapexUtils.universalTheme.expandNavMenuNodes();\n\t\t\t\tbreak;\n\t\t\tcase 'collapsecollapsibleregion':\n\t\t\t\tif(daThis.action.affectedElementsType != 'REGION'){\n\t\t\t\t\tapex.debug.error('A region needs to be selected for ' + daThis.action.action);\n\t\t\t\t} else {\n\t\t\t\t\tapexUtils.universalTheme.collapseCollapsibleRegion(daThis.affectedElements);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'expandcollapsibleregion':\n\t\t\t\tif(daThis.action.affectedElementsType != 'REGION'){\n\t\t\t\t\tapex.debug.error('A region needs to be selected for ' + daThis.action.action);\n\t\t\t\t} else {\n\t\t\t\t\tapexUtils.universalTheme.expandCollapsibleRegion(daThis.affectedElements);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'scrollto':\n\t\t\t\t//if no Affected Element was selected, daThis.affectedElements will (for some reason) be the document object\n\t\t\t\t//so we check the affectedElementsType which will be null\n\t\t\t\t//daThis.affectedElements.length will be 0 if the provided selector returns no objects\n\t\t\t\tif(!daThis.action.affectedElementsType || daThis.affectedElements.length == 0){\n\t\t\t\t\tapex.debug.error('No Affected Element found for ' + daThis.action.action);\n\t\t\t\t} else {\n\t\t\t\t\tapexUtils.universalTheme.scrollTo(daThis.affectedElements.eq(0), parseInt(duration));\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'configuresuccessnotificationduration':\n\t\t\t\tapexUtils.universalTheme.configureSuccessNotificationDuration(parseInt(duration));\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tapex.debug.error('Action \"' + performAction + '\" for ' + daThis.action.action + ' not handled');\n\t\t}\n\t}\n};"],"file":"script.js"}